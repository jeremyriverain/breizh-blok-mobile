// Mocks generated by Mockito 5.4.5 from annotations
// in breizh_blok_mobile/test/ui/core/widgets/my_bar_chart_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'package:fl_chart/fl_chart.dart' as _i2;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i3;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeSideTitles_0 extends _i1.SmartFake implements _i2.SideTitles {
  _FakeSideTitles_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [TitleMeta].
///
/// See the documentation for Mockito's code generation for more information.
class MockTitleMeta extends _i1.Mock implements _i2.TitleMeta {
  @override
  double get min =>
      (super.noSuchMethod(
            Invocation.getter(#min),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);
  @override
  double get max =>
      (super.noSuchMethod(
            Invocation.getter(#max),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);
  @override
  double get parentAxisSize =>
      (super.noSuchMethod(
            Invocation.getter(#parentAxisSize),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);
  @override
  double get axisPosition =>
      (super.noSuchMethod(
            Invocation.getter(#axisPosition),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);
  @override
  double get appliedInterval =>
      (super.noSuchMethod(
            Invocation.getter(#appliedInterval),
            returnValue: 0.0,
            returnValueForMissingStub: 0.0,
          )
          as double);
  @override
  _i2.SideTitles get sideTitles =>
      (super.noSuchMethod(
            Invocation.getter(#sideTitles),
            returnValue: _FakeSideTitles_0(
              this,
              Invocation.getter(#sideTitles),
            ),
            returnValueForMissingStub: _FakeSideTitles_0(
              this,
              Invocation.getter(#sideTitles),
            ),
          )
          as _i2.SideTitles);
  @override
  String get formattedValue =>
      (super.noSuchMethod(
            Invocation.getter(#formattedValue),
            returnValue: _i3.dummyValue<String>(
              this,
              Invocation.getter(#formattedValue),
            ),
            returnValueForMissingStub: _i3.dummyValue<String>(
              this,
              Invocation.getter(#formattedValue),
            ),
          )
          as String);
  @override
  _i2.AxisSide get axisSide =>
      (super.noSuchMethod(
            Invocation.getter(#axisSide),
            returnValue: _i2.AxisSide.left,
            returnValueForMissingStub: _i2.AxisSide.left,
          )
          as _i2.AxisSide);
}
